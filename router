
### router/600_local-config_disposable_aliases
#################################

#------------------

# supplementary aliases which allow arbitrary prefixes, delimited with a '.'
# delivery or rejection is controlled by a sqlite database lookup

# put this in a filter file
# if an alias is not defined, go to next router

# acl
# if the prefix is unseen
#   if it contains a count > 0
#     initialise sqlite to that many-1
#     accept # accept by default
#   else
#     initialise to 0 # reject by default
#     fail # or lookup default failure mode?
#   end
# else # it is known
#   if sqlite lookup count > 0
#     decrement count
#     allow
#   else if sqlite lookup count < 0
#     allow
#   else
#     fail # or lookup default failure mode?
#   end
# end
#     
# 


# is it one of our aliases?
# no -> pass
# is it a control message, sent by an authorised user on an safe connection?
# yes -> pipe to control <cmd>
# otherwise, route to recipients
#
# permit if
# 
# 
# and local part contains stem
# and subject matches command list
# address is "|handler" if command
# otherwise lookup

# Note this router depends on variables defined by the disposable_aliases ACL.
disposable_aliases:
  debug_print = "R: disposable_aliases for $local_part_prefix$local_part@$domain"
  driver = redirect

  # Skip router unless local mail
  domains = +local_domains

  # Skip router unless to one of our aliases 
  #condition = ${if !eq{$acl_m_known_alias}{}}

  allow_fail
  allow_defer
  allow_filter
  user = Debian-exim
#  ignore_enotdir
  require_files = DISP_ALIASES_DB
  local_part_prefix = *.
  pipe_transport = pipe
  reply_transport = address_reply
  file = DISP_ALIASES_FILTER



